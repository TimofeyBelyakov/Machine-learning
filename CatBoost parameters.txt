	loss_function - по этой функции проводится оптимизация
	custom_metric - просто для вывода дополнительных метрик во время обучения
	eval_metric - используется для обнаружения переобучения и выбора наилучшей модели

Лучше подбирать:

	task_type - что использовать GPU или CPU
	devices - сколько устройств использовать
	depth - максимальная глубина деревьев
	learning_rate - шаг обучения
	l2_leaf_reg - коэффициент при L2 регуляризации
	subsample - доля объектов, участвующих при построении дерева
	rsm - доля признаков, участвующих при построении дерева
	sampling_frequency - частота разбиения на подвыборки
	min_data_in_leaf - минимальное количество объектов в листе
	one_hot_max_size - максимальное количество колонок при one hot encoding
	class_weights - веса классов
	auto_class_weights - автоматический вес классам
	scale_pos_weight - вес для класса 1 (для класса 0 вес - единица)
	use_best_model - для выбора наилучшей модели (обрезка лишних деревьев)
	early_stopping_rounds - чтобы остановить обучение, если прошли минимум
	save_snapshot - для сохранения в процессе обучения
	snapshot_file - файл для сохранения
	snapshot_interval - интервал сохранения
	train_dir - каталог для хранения файлов, созданных во время обучения
	verbose - что-то с выводом на экран
	random_strength - веса в листьях дополнительно умножаются на случайную, нормально распределённую, величину с этой дисперсией

	leaf_estimation_method - метод для расчёта значений в листах
	leaf_estimation_iterations - CatBoost может вычислять значения листьев, используя несколько шагов градиента или ньютона вместо одного.
Этот параметр регулирует количество шагов, выполняемых в каждом дереве при вычислении конечных значений.
	leaf_estimation_backtracking - для автоматического снижения leaf_estimation_iterations во время обучения.

	bootstrap_type - определяет метод выборки весов объектов
	bagging_temperature - определяет настройки Bayesian bootstrap
	boosting_type - метод бустинга
	boost_from_average - Инициализируйте приблизительные значения лучшим постоянным значением для указанной функции потерь. Устанавливает значение смещения на начальное лучшее постоянное значение.

	grow_policy - политика выращивания деревьев, определяет, как выполнить жадное построение дерева
	ignored_features - игнорирование указанных признаков
	nan_mode - для заполнения пропущенных значений
	logging_level - вывод данных во время обучения
	metric_period - частота расчёта метрик
	target_border - указывает с какой границы относить к 0 или 1
	

______________________________________________________________________________________________



best_model_min_trees - минимальное кол-во деревьев, даже если есть лишние
max_leaves - макс. кол-во листьев
has_time - чтобы не менять порядок объектов в датасете
fold_permutation_block - объекты в наборе данных сгруппированы в блоки перед случайными перестановками. Этот параметр определяет размер блоков. Чем меньше значение, тем медленнее обучение. Большие значения могут привести к ухудшению качества.
fold_len_multiplier - коэффициент изменения длины фолдов
approx_on_full_history - сколько объектов из фолда участвуют в апроксимации
class_names - переопределяет имена классов
allow_const_label - Используйте его для обучения моделей с наборами данных, которые имеют одинаковые значения меток для всех объектов.
score_function - score, используемый для выбора следующего разбиения при построении дерева
feature_weights - вес признакам
first_feature_use_penalties - штрафы за первое появление признака в модели
fixed_binary_splits - список индексов бинарных признаков, которые нужно разместить в корне каждого дерева
penalties_coefficient - коэффициент для умножения всех штрафов
sampling_unit - хз
model_shrink_rate - хз
model_shrink_mode - хз
per_object_feature_penalties - хз
mvs_reg - хз
input_borders - хз
output_borders - хз
langevin - хз
diffusion_temperature - хз
posterior_sampling - хз
monotone_constraints - хз
od_wait - хз









